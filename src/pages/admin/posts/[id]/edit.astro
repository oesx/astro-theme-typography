---
import { getCollection } from 'astro:content'
import AdminLayout from '@/layouts/AdminLayout.astro'

const { id } = Astro.params
const posts = await getCollection('posts')
const post = posts.find((post) => post.slug === id)

if (!post) {
  return Astro.redirect('/404')
}
---

<AdminLayout title="Edit Post">
  <div class="flex justify-between">
    <h1 class="text-2xl font-bold">Edit Post: {post.data.title}</h1>
  </div>

  <form id="edit-form" class="mt-8 space-y-4">
    <div>
      <label for="title" class="block text-sm font-medium">Title</label>
      <input
        type="text"
        name="title"
        id="title"
        value={post.data.title}
        required
        class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2"
      />
    </div>

    <div>
      <label for="description" class="block text-sm font-medium">Description</label>
      <textarea
        name="description"
        id="description"
        rows="3"
        class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2"
      >{post.data.description}</textarea>
    </div>

    <div>
      <label for="content" class="block text-sm font-medium">Content</label>
      <textarea
        name="content"
        id="content"
        rows="20"
        required
        class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 font-mono"
      >{post.body}</textarea>
    </div>

    <div>
      <label class="block text-sm font-medium">
        <input
          type="checkbox"
          name="draft"
          class="mr-2"
          checked={post.data.draft}
        />
        Draft
      </label>
    </div>

    <div class="flex justify-end space-x-4">
      <button type="button" id="delete-button" class="button bg-red-500 hover:bg-red-600">
        Delete
      </button>
      <button type="submit" class="button">Update Post</button>
    </div>
  </form>
</AdminLayout>

<script define:vars={{ id: post.slug }}>
  const form = document.getElementById('edit-form')
  const deleteButton = document.getElementById('delete-button')

  form?.addEventListener('submit', async (e) => {
    e.preventDefault()
    const formData = new FormData(form)
    const data = {
      title: formData.get('title'),
      description: formData.get('description'),
      content: formData.get('content'),
      draft: formData.get('draft') === 'on',
    }

    try {
      const response = await fetch(`/api/posts/${id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      })

      if (response.ok) {
        window.location.href = '/admin/posts'
      } else {
        alert('Failed to update post')
      }
    } catch (error) {
      console.error('Update failed:', error)
      alert('Failed to update post')
    }
  })

  deleteButton?.addEventListener('click', async () => {
    if (!confirm('Are you sure you want to delete this post?')) {
      return
    }

    try {
      const response = await fetch(`/api/posts/${id}`, {
        method: 'DELETE',
      })

      if (response.ok) {
        window.location.href = '/admin/posts'
      } else {
        alert('Failed to delete post')
      }
    } catch (error) {
      console.error('Delete failed:', error)
      alert('Failed to delete post')
    }
  })
</script>
